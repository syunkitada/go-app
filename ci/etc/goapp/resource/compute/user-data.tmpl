#!/bin/sh -x

# Create Default User
echo 'goapp:x:2000:2000:goapp,,,:/home/goapp:/bin/bash' >> /etc/passwd
echo 'goapp:goapp' |chpasswd

# Create Default Group
echo "goapp:x:2000:goapp" >> /etc/group
echo "%goapp  ALL=(ALL:ALL) ALL" >> /etc/sudoers

sed -i 's/^PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config
sudo systemctl restart sshd

# Disable cloud-*
for $service in `systemctl list-unit-files -t service | grep cloud- | awk '{print $1}'`
do
    systemctl disable cloud-config
    systemctl disable cloud-final
    systemctl disable cloud-init-local
    systemctl disable cloud-init
done


# Create init files
mkdir -p /opt/goapp
mkdir -p /opt/goapp/bin/

cat << EOS > /opt/goapp/bin/goapp-init
#!/bin/sh -x
# Setup Network
{{- range $i, $port := .Ports }}

dev{{ $i }}=`grep {{ $port.VmMac }} /sys/class/net/*/address -l | awk -F '/' '{print $5}'`
ip addr add {{ $port.VmIp }}/32 dev $dev{{ $i }}
ip link set $dev{{ $i }} up

{{- end }}

ip route add {{ .DefaultGateway }} dev $dev0
ip route add default via {{ .DefaultGateway }}
EOS


# Create init service
cat << EOS > /etc/systemd/system/goapp-init.service
[Unit]
Description=Initial cloud-init job (metadata service crawler)
DefaultDependencies=no
After=cloud-init-local.service
After=systemd-networkd-wait-online.service
After=networking.service
Before=network-online.target
Before=sshd-keygen.service
Before=sshd.service
Before=sysinit.target
Before=systemd-user-sessions.service

[Service]
Type=oneshot
ExecStart=/opt/goapp/bin/goapp-init
RemainAfterExit=yes
TimeoutSec=0

# Output needs to appear in instance console output
StandardOutput=journal+console
EOS
