syntax = "proto3";

import "google/protobuf/timestamp.proto";

option java_multiple_files = true;
option java_package = "io.grpc.examples.routeguide";
option java_outer_classname = "RouteGuideProto";

package monitor_api_grpc_pb;


service MonitorApi {
  rpc Status(StatusRequest) returns (StatusReply) {}

  rpc GetNode(GetNodeRequest) returns (GetNodeReply) {}
  rpc UpdateNode(UpdateNodeRequest) returns (UpdateNodeReply) {}

  rpc Report(ReportRequest) returns (ReportReply) {}

  rpc GetUserState(GetUserStateRequest) returns (GetUserStateReply) {}

  rpc GetIndex(GetIndexRequest) returns (GetIndexReply) {}
  rpc GetHost(GetHostRequest) returns (GetHostReply) {}
  rpc GetLog(GetLogRequest) returns (GetLogReply) {}
}

message StatusRequest {}

message StatusReply {
    string msg = 1;
}


//
// Node
//
message GetNodeRequest {
    string trace_id = 1;
    string user_name = 2;
    string role_name = 3;
    string project_name = 4;
    string project_role_name = 5;
    string target = 6;
    string cluster = 7;
}

message GetNodeReply {
    int64 status_code = 1;
    string err = 2;
    repeated Node nodes = 3;
}

message UpdateNodeRequest {
    string trace_id = 1;
    string name = 2;
    string kind = 3;
    string role = 4;
    string status = 5;
    string status_reason = 6;
    string state = 7;
    string state_reason = 8;
}

message UpdateNodeReply {
    int64 status_code = 1;
    string err = 2;
}

message Node {
    google.protobuf.Timestamp updated_at = 1;
    google.protobuf.Timestamp created_at = 2;
    string cluster = 3;
    string name = 4;
    string kind = 5;
    string role = 6;
    string status = 7;
    string status_reason = 8;
    string state = 9;
    string state_reason = 10;
}


//
// Report
//
message ReportRequest {
    string index = 1;
    string project = 2;
    string kind = 3;
    string host = 4;
    int64 state = 5;
    string warning = 6;
    int64 warnings = 7;
    string error = 8;
    int64 errors = 9;
    int64 timestamp = 10;
    repeated Log logs = 11;
    repeated Metric metrics = 12;
}

message ReportReply {
    int64 status_code = 1;
    string err = 2;
}

message Log {
    string name = 1;
    string time = 2;
    map<string, string> log = 3;
}

message Metric {
    string name = 1;
    string time = 2;
    map<string, string> tag = 3;
    map<string, int64> metric = 4;
}


//
// GetUserState
//
message GetUserStateRequest {
    string trace_id = 1;
    string user_name = 2;
    string role_name = 3;
    string project_name = 4;
    string project_role_name = 5;
}

message GetUserStateReply {
    int64 status_code = 1;
    string err = 2;
    map<string, Index> index_map = 3;
}


//
// GetIndex
//
message GetIndexRequest {
    string trace_id = 1;
    string user_name = 2;
    string role_name = 3;
    string project_name = 4;
    string project_role_name = 5;
}

message GetIndexReply {
    int64 status_code = 1;
    string err = 2;
    map<string, Index> index_map = 3;
}

message Index {
    string name = 1;
    double count = 2;
    double states = 3;
    double warnings = 4;
    double errors = 5;
}


//
// GetHost
//
message GetHostRequest {
    string trace_id = 1;
    string user_name = 2;
    string role_name = 3;
    string project_name = 4;
    string project_role_name = 5;
    string index = 6;
}

message GetHostReply {
    int64 status_code = 1;
    string err = 2;
    map<string, Host> host_map = 3;
}

message Host {
    string index = 1;
    string kind = 2;
    string name = 3;
    double state = 4;
    string error = 5;
    double errors = 6;
    string warning = 7;
    double warnings = 8;
    double timestamp = 9;
}


//
// GetLog
//
message GetLogRequest {
    string trace_id = 1;
    string user_name = 2;
    string role_name = 3;
    string project_name = 4;
    string project_role_name = 5;
    string index = 6;
    string log_name = 7;
    string log_host = 8;
    string log_trace_id = 9;
}

message GetLogReply {
    int64 status_code = 1;
    string err = 2;
    repeated Log logs = 3;
}
